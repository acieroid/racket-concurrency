(main ((create master-init ())  ))
(master-init ((create rate-computer ({Num}))
              (create series-worker (master-init #f {Num}))
              (create series-worker (master-init series-worker {Num}))
              (create series-worker (master-init rate-computer {Num}))
              (become master ("#<vector>" "#<vector>" {Num} {Num} {Num}))
              (received start ())
              (received result ({Num}))))
(series-worker ( (become series-worker-wait (master-init #f))
                 (become series-worker-wait (master-init series-worker))
                 (become series-worker-wait (master-init rate-computer))
                 (become series-worker (master-init rate-computer {Num}))
                 (become series-worker (master-init series-worker {Num}))
                 (become series-worker (master-init #f {Num}))
                 (received stop ())
                 (received next-term ())
                 (received get-term ())
                 (received compute ({Num} series-worker))
                 (received result ({Num}))))
(rate-computer ( (become rate-computer ({Num})) (received compute ({Num} series-worker)) (received stop ())))



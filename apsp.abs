(main ((create apsp-actor (() {Int} () #f "#<vector>"))  ))
(apsp-actor
 ((create apsp-actor (() {Int} () #t "#<vector>"))
  (create apsp-actor (() {Int} () #f "#<vector>"))
  (create apsp-actor (() {Int} "#<list>" #t "#<vector>"))
  (create apsp-actor (() {Int} "#<list>" #f "#<vector>"))
  (create apsp-actor ("#<list>" {Int} () #t "#<vector>"))
  (create apsp-actor ("#<list>" {Int} () #f "#<vector>"))
  (create apsp-actor ("#<list>" {Int} "#<list>" #t "#<vector>"))
  (create apsp-actor ("#<list>" {Int} "#<list>" #f "#<vector>"))

  (become apsp-actor (() {Int} () #t "#<vector>"))
  (become apsp-actor (() {Int} () #f "#<vector>"))
  (become apsp-actor (() {Int} "#<list>" #t "#<vector>"))
  (become apsp-actor (() {Int} "#<list>" #f "#<vector>"))
  (become apsp-actor ("#<list>" {Int} () #t "#<vector>"))
  (become apsp-actor ("#<list>" {Int} () #f "#<vector>"))
  (become apsp-actor ("#<list>" {Int} "#<list>" #t "#<vector>"))
  (become apsp-actor ("#<list>" {Int} "#<list>" #f "#<vector>"))

  (received neighbor (()))
  (received neighbor ("#<list>"))
  (received initial ())
  (received result ({Int} {Int} "#<vector>"))))

(main ((create sor-runner ({Num} {Num} {Num} #t))))
(sor-runner ((create sor-actor ({Num} {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
             (create sor-actor ({Num} {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
             (create sor-actor ({Num} {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
             (create sor-actor ({Num} {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
             (create sor-actor (#f {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
             (create sor-actor (#f {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
             (create sor-actor (#f {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
             (create sor-actor (#f {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
             (create sor-actor ("#<vector>" {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
             (create sor-actor ("#<vector>" {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
             (create sor-actor ("#<vector>" {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
             (create sor-actor ("#<vector>" {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
             (create sor-peer ({Num} {Num} {Num} #t))
             (create sor-peer ({Num} {Num} {Num} #f))
             (become sor-runner ({Num} {Num} {Num} #t))
             (become sor-runner ({Num} {Num} {Num} #f))
             (received boot ())
             (received border ("#<vector>"))
             (received result ({Num} {Num} {Num} {Num}))
             (received result ({Num} {Num} #f {Num}))
             (received result ({Num} {Num} "#<vector>" {Num}))))
(sor-peer ((create sor-actor ({Num} {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
           (create sor-actor ({Num} {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
           (create sor-actor ({Num} {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
           (create sor-actor ({Num} {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))

           (create sor-actor (#f {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
           (create sor-actor (#f {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
           (create sor-actor (#f {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
           (create sor-actor (#f {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))

           (create sor-actor ("#<vector>" {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
           (create sor-actor ("#<vector>" {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
           (create sor-actor ("#<vector>" {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
           (create sor-actor ("#<vector>" {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
           (become sor-peer ({Num} {Num} {Num} #t))
           (become sor-peer ({Num} {Num} {Num} #f))
           (received boot ())
           (received result ({Num} {Num} "#<vector>" {Num}))
           (received result ({Num} {Num} #f {Num}))
           (received result ({Num} {Num} {Num} {Num}))))
(sor-actor ((become sor-actor ({Num} {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
            (become sor-actor ({Num} {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
            (become sor-actor ({Num} {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
            (become sor-actor ({Num} {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))

            (become sor-actor (#f {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
            (become sor-actor (#f {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
            (become sor-actor (#f {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
            (become sor-actor (#f {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))

            (become sor-actor ("#<vector>" {Num} {Num} {Num} #f {Num} {Num} #f "#<list>"))
            (become sor-actor ("#<vector>" {Num} {Num} {Num} #f {Num} {Num} #t "#<list>"))
            (become sor-actor ("#<vector>" {Num} {Num} {Num} "#<vector>" {Num} {Num} #f "#<list>"))
            (become sor-actor ("#<vector>" {Num} {Num} {Num} "#<vector>" {Num} {Num} #t "#<list>"))
            (received start ({Num} "#<vector>"))
            (received sor-value ({Num}))
            (received value ("#<vector>"))
            (received value (#f))
            (received value ({Num}))))
